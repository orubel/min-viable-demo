import groovy.json.JsonSlurper

buildscript {
	repositories {
		jcenter()
		mavenLocal()
		mavenCentral()
	}
}

plugins {
	id 'groovy'
	id 'java'
	id 'application'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//id "ca.cutterslade.analyze"
}

description = "Java Demo Application for beapi-spring-boot-starter"

apply plugin: 'application'
apply plugin: 'groovy'

sourceSets {
	main {
		java { srcDirs = [] }    // no source dirs for the java compiler
		groovy { srcDirs = ["src/main/java", "src/main/groovy"] }  // compile   everything in src/ with groovy
	}
}

java {
	sourceCompatibility = "${sourceCompatibility}"
}

repositories {
	mavenLocal()
	mavenCentral()
}

//bootJar {
//    enabled = true
//}

//jar {
//    enabled = true
//}

apply plugin: "io.spring.dependency-management"


dependencies {
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.3'

	implementation("org.springframework.boot:spring-boot-starter:${springBootVersion}")
	implementation("org.apache.tomcat.embed:tomcat-embed-el:10.1.39")
	implementation("org.apache.tomcat.embed:tomcat-embed-core:10.1.39")

	// [WEB]
	implementation 'org.springframework:spring-web:6.0.10'
	implementation "org.springframework:spring-webmvc:6.0.10"

	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.1"

	// [TEST]
	implementation 'commons-io:commons-io:2.8.0'
	implementation 'org.apache.groovy:groovy:4.0.15'
	implementation 'org.apache.groovy:groovy-json:4.0.15'
	testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
	testImplementation('org.spockframework:spock-spring:2.4-M1-groovy-4.0')
	testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		exclude group: "com.vaadin.external.google", module:"android-json"
	}
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.1.3'
	implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.1.3'
}


ext.javaMainClass = "demo.application.Application"


// -Pargs=configType=${configType}
application {
	mainClass = javaMainClass
	applicationDefaultJvmArgs = [project.property('configType.'+configTypeDefault)]
	if (project.hasProperty("args")) {
		List temp = project.args.split(',')
		temp.each(){
			List l = args.split('=')
			if(l[0]=='configType' && project.property('configType.'+l[1])) {
				applicationDefaultJvmArgs = [project.property('configType.'+l[1])]
			}
		}
	}
}

springBoot {
	buildInfo()
}

test {
	useJUnitPlatform()
}

configurations {
	commonWebResources
}

jar {
	manifest {
		attributes 'Main-Class': javaMainClass
	}
}

